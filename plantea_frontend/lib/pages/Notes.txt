///////// gridview that displays container . string is taken from list from db and added in the container: the container are displayed
GridView.builder(
  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
    crossAxisCount: 2, // Number of columns in the grid
  ),
  itemCount: yourList.length, // Total number of items in the grid
  itemBuilder: (context, index) {
    // Retrieve the item from yourList
    var item = yourList[index];
    
    // Create a Container with some styling
    return Container(
      margin: EdgeInsets.all(8), // Add some margin around the container
      decoration: BoxDecoration(
        color: Colors.blue, // Example color, you can change it
        borderRadius: BorderRadius.circular(10), // Add rounded corners
      ),
      child: Center(
        child: Text(
          item.toString(), // Display the item data inside the container
          style: TextStyle(
            fontSize: 20,
            color: Colors.white,
          ),
        ),
      ),
    );
  },
)

////////////////////// list view to fetch data from db and store in list of containers
//FECTHED DATA WILL BE STORED IN A LIST
// ListView.builder(
//         itemCount: _data.length,
//         itemBuilder: (context, index) {
//           final item = _data[index];
//           return ListTile(
//             title: Text(item['title']),
//             subtitle: Text(item['description']),
                        //                 Padding( // list of container
                        //   padding: const EdgeInsets.symmetric(vertical: 10), // Add vertical padding
                        //   child: Container(
                        //     width: 296,
                        //     height: 150,
                        //     constraints: BoxConstraints(
                        //       minWidth: 296,
                        //       minHeight: 180,
                        //       maxWidth: 296,
                        //       maxHeight: 180,
                        //     ),
                        //     decoration: BoxDecoration(
                        //       color: FlutterFlowTheme.of(context).secondaryBackground,
                        //       image: DecorationImage(
                        //         fit: BoxFit.cover,
                        //         alignment: AlignmentDirectional(0, 0),
                        //         image: Image.network(
                        //           'https://images.unsplash.com/photo-1495231916356-a86217efff12?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=M3w0NTYyMDF8MHwxfHNlYXJjaHwxNXx8Zmxvd2VyfGVufDB8fHx8MTcxNDE0NjE1M3ww&ixlib=rb-4.0.3&q=80&w=400',
                        //         ).image,
                        //       ),
                        //       borderRadius: BorderRadius.circular(23),
                        //     ),
                        //     child: Align(
                        //       alignment: AlignmentDirectional(1, 1),
                        //       child: Padding(
                        //         padding: EdgeInsetsDirectional.fromSTEB(0, 0, 25, 25),
                        //         child: FlutterFlowIconButton(
                        //           borderRadius: 5,
                        //           borderWidth: 1,
                        //           buttonSize: 40,
                        //           fillColor: Color(0xFFFAF49D),
                        //           icon: Icon(
                        //             Icons.add_rounded,
                        //             color: Color(0xFF355E3B),
                        //             size: 24,
                        //           ),
                        //           onPressed: () {
                        //             print('IconButton pressed ...');
                        //           },
                        //         ),
                        //       ),
                        //     ),
                        //   ),
                        // );
//           );
//         },
//       ),wrap